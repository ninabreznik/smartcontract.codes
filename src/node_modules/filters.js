const bel = require('bel')
const csjs = require('csjs-inject')
let activeFilter

module.exports = filters


function filters (names, notify) {
  return bel`<div class=${css.filterContainer}>
    ${names.map(name => button(name, notify))}</div>`
}

function button (name, notify) {
  const el = bel`<div class=${css.button} onclick=${(ev)=>filterFor(ev, name, notify)}>${name}</div>`
  if (name === 'All') makeActive(el)
  return el
}

function filterFor (ev, name, notify) {
  makeActive(ev.target)
  if (name === 'All') {
    return notify({ type: 'filters', body: 'All' })
  }
  if (name === 'Featured') {
    return notify({ type: 'filters', body: 'Featured' })
  }
  if (name === 'Basic') {
    return notify({ type: 'filters', body: 'Basic' })
  }
  if (name === 'OpenZeppelin') {
    return notify({ type: 'filters', body: 'OpenZeppelin' })
  }
  if (name === 'Audited') {
    return notify({ type: 'filters', body: 'Audited' })
  }
  if (name === 'New') {
    return notify({ type: 'filters', body: 'New' })
  }
  if (name === 'Popular') {
    return notify({ type: 'filters', body: 'Popular' })
  }
}

function makeActive (el) {
  if (activeFilter) activeFilter.classList.remove(css.active)
  activeFilter = el
  el.classList.add(css.active)
}

var css = csjs`
  .filterContainer {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    margin-bottom: 30px;
  }
  .button {}
  .button:hover {
    cursor: pointer;
    color: var(--card-cover-title);
  }
  .active {
    border-bottom: 2px solid var(--card-cover-title);
  }
`
