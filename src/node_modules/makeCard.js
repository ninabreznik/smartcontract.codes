const bel = require('bel')
const csjs = require('csjs-inject')
const icon = require('icon')
const svg = require('./svg.json')
const avatar = require('avatar')
const copyToClipboard = require('copyToClipboard')

module.exports = makeCard

function makeCard (contract) {
  const { source, title, hash } = contract
  const card = bel`
    <div class=${css.collectionCard}>
      <pre class=${css.code} onclick=${() => openInEditor(contract)}>
        <code>${source}</code>
      </pre>
      <div class=${css.cardCover}>
        <div class=${css.avatar}>
          ${avatar(hash)}
        </div>
        <div class=${css.coverInfo}>
          <h5 class=${css.coverTitle}>${title}</h5>
          <p class=${css.cardUserInfo}>${hash.substring(0,10)}...${hash.substring(hash.length-10), hash.substring(hash.length-10)}</p>
          ${copyToClipboard(hash)}
        </div>
      </div>
    </div>`
  return card
}



// ===== helpers =====
var editor_url = 'https://ethereum-play.github.io/editor-solidity/'
// var editor_url = 'https://10.0.2.15:9966/'
var counter = 1
const editors = {}

window.addEventListener('message', event => {
  const names = Object.keys(editors)
  const name = names.filter(name => editors[name].window === event.source)[0]
  const editor = editors[name]
  if (editor) {
    const [id, from, path, ref, type, body] = event.data
    if (type !== 'ready') return console.error('unexpected message', {id, from, path, ref, type, body})
    if (!editor.address) editor.address = from
    editor.window.postMessage([
      counter++,            // id (= message id)
      `/collection-page`,   // from
      editor.address,       // path
      0,                    // ref (=initiate new communucation)
      'open',               // type
      editor.contract       // body
    ], '*')
    editor.window.focus()
  }
})

function openInEditor (contract) {
  const name = `code-editor-${Object.keys(editors).length}`
  editors[name] = { name, contract, window: window.open(editor_url, name) }
}
const css = csjs`
  .collectionCard {
    width: 100%;
    height: 100%;
    border-radius: var(--collectionCard-border-radius);
    position: relative;
    background-color: var(--editor-preview);
    border: 0px solid var(--card-cover-border);
    transition: transform .4s, background-color .4s, border .4s, box-shadow .4s ease-in-out;
    -webkit-transition: transform .4s, background-color .4s, border .4s, box-shadow .4s ease-in-out;
    -moz-transition: transform .4s, background-color .4s, border .4s, box-shadow .4s ease-in-out;
    -o-transition: transform .4s, background-color .4s, border .4s, box-shadow .4s ease-in-out;
    box-shadow: var(--card-shadow);
    overflow: hidden;
  }
  .collectionCard:hover {
    transform: scale(1.1);
    -webkit-transform: scale(1.1);
    -ms-transform: scale(1.1);
    cursor: pointer;
    border: var(--card-hover-border);
    box-shadow: var(--card-hover-shadow);
    background: var(--card-code-overlay);
    z-index: 3;
  }
  .collectionCard:hover:before {
    opacity: 1;
  }
  .cardCover {
    position: relative;
    z-index: 3;
    cursor: auto;
    background-color: var(--card-cover);
    width: 100%;
    display: grid;
    grid-template-columns: 63px 1fr;
    grid-template-rows: 1fr auto;
    grid-column-gap: 5px;
    transition: bottom .3s, background-color .3s, border-radius .3s ease-in-out;
    -webkit-transition: bottom .3s, background-color .3s, border-radius .3s ease-in-out;
    -moz-transition: bottom .3s, background-color .3s, border-radius .3s ease-in-out;
    -o-transition: bottom .3s, background-color .3s, border-radius .3s ease-in-out;
    padding: 10px 0 8px 0;
    border-radius: 0 0 4px 4px;
  }
  .collectionCard:hover .cardCover {
    background-color: var(--card-hover-cover);
    border-radius: 4px;
  }
  .avatar {
    width: 43px;
    height: 43px;
    border-radius: 4px;
    overflow: hidden;
    align-self: center;
    justify-self: center;
  }
  .coverInfo {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: 1fr;
    position: relative;
  }
  .coverTitle {
    color: var(--card-cover-title);
    font-weight: normal;
    grid-row: 1;
    grid-column: 1;
    align-self: end;
    transition: color .3s ease-in-out;
    -webkit-transition: color .3s ease-in-out;
    -moz-transition: color .3s ease-in-out;
    -o-transition: color .3s ease-in-out;
  }
  .collectionCard:hover .coverTitle,  .collectionCard:hover .cardTime {
    color: var(--card-hover-cover-title);
  }
  .cardUserInfo {
    align-self: center;
    font-size: var(--text-xsmall);
    color: var(--card-cover-userInfo);
  }
  .code {
    width: calc(100% - 40px);
    height: calc(100% - 76px);
    margin: 0;
    padding: 0px 20px 15px 20px;
    word-break: break-all;
    word-wrap: break-word;
    white-space: pre-line;
    font-family: var(--code-font);
    font-size: var(--card-code-text);
    line-height: 20px;
    overflow: hidden;
  }
`
