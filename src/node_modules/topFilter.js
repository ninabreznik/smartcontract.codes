const bel = require('bel')
const csjs = require('csjs-inject')

module.exports = topFilter

function topFilter() {
    const filters = bel`
    <ul class=${css.filters} onclick=${(e) => focus(e)}>
        <li><a href="#" class=${css.current}">Source Codes</a></li>
        <li><a href="#">Address</a></li>
        <li><a href="#">Titles</a></li>
        <li><a href="#">Populars</a></li>
        <li><a href="#">Audited</a></li>
        <li><a href="#">Beginner</a></li>
    </ul>`

    return bel`<nav class=${css["top-nav"]}>${filters}</nav>`

    function focus(e) {
        const el = e.target
        if (el.classList.contains(css.current)) return
        if (el.parentNode.nodeName === "LI") {
          let filter = el
          let links = filter.parentNode.parentNode.querySelectorAll('a')
          links.forEach( link => {
            if (link.classList.contains(css.current))
              link.classList.remove(css.current)
          })
          filter.classList.add(css.current)
        }
    }
}

const css = csjs`
.top-nav {
    display: grid;
    grid-row-start: 2;
    grid-row-end: 2;
    grid-column-start: 1;
    grid-column-end: 4;
    padding: 10px 0 0 45px;
  }
.filters {
    display: flex;
  }
  .filters li {
    margin: 0 20px;
  }
  .filters a {
    font-size: 14px;
    padding: 9px 0px;
    border-bottom: 2px solid rgba(0,0,0, 0);
    transition: color .5s, border-bottom .6s ease-in-out;
  }
  .filters a:hover {
    color: var(--filters-a-hover);
  }
  .filters a.current, .filters a.current:hover {
    color: var(--body-color);
    border-bottom: 2px solid var(--filters-border-color);
  }
  @media (max-width: 768px) {
    .filters li {
      margin: 0 2%;
    }
    .filters {
      display: grid;
      grid-template: 1fr / repeat(6, auto);
    }
  }
  @media (max-width: 640px) {
    .top-nav {
      padding-left: 2%;
    }
  }
  `
